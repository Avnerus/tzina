import ImprovedNoise from '../util/improved_noise'
import TextureAnimator from '../util/texture_animator'
import GeometryUtils from '../util/GeometryUtils'
import FBO from '../util/fbo'
import EndArrayPlugin from '../util/EndArrayPlugin'
import DebugUtil from '../util/debug'
TweenPlugin.activate([EndArrayPlugin]);

export default class MeirAnimation extends THREE.Object3D {
    constructor( scene, renderer ) {
        super();
        this.BASE_PATH = 'assets/animations/mark';
    }

    init(loadingManager) {
        this.loadingManager = loadingManager;
        this.setupAnim();
    }

    setupAnim() {

        // setup animation sequence
        this.animStart = false;
        this.sequenceConfig = [
            { time: 5,  anim: ()=>{this.doFirstAni()} }
        ];
        this.nextAnim = null;
        this.completeSequenceSetup();

        this.loadingManager.itemStart("MarkAnim");

        //        
        this.perlin = new ImprovedNoise();
        let tex_loader = new THREE.TextureLoader(this.loadingManager);
        let loader = new THREE.JSONLoader(this.loadingManager);

        this.lookupTable=[];
        for (let i=0; i<50; i++) {
          this.lookupTable.push(Math.random());
        }

        // NEON
            // loader.load(this.BASE_PATH + "/models/mark1.json", (geometry, material) => {
            //     this.mark1 = new THREE.Mesh( geometry, new THREE.MeshBasicMaterial({color: 0xff0000}) );
            //     this.add(this.mark1);
            // });

            // loader.load(this.BASE_PATH + "/models/mark2.json", (geometry, material) => {  
            //     this.mark2 = new THREE.Mesh( geometry, new THREE.MeshBasicMaterial({color: 0x00ffff}) );
            //     this.add(this.mark2);            
            // });

            // // let neon1_data = {"0": [["-5.918", "2.138", "1.156"], ["-5.918", "2.138", "1.156"], ["-5.918", "2.138", "1.156"], ["-5.856", "1.867", "1.129"], ["-6.212", "1.774", "1.087"], ["-6.028", "1.398", "1.015"], ["-5.911", "0.612", "0.631"], ["-6.430", "0.684", "0.544"], ["-6.611", "0.179", "0.312"]], "1": [["-5.652", "3.541", "1.083"], ["-5.652", "3.541", "1.083"], ["-5.652", "3.541", "1.083"], ["-5.914", "3.532", "1.095"], ["-6.329", "3.236", "1.140"], ["-6.271", "2.765", "1.174"], ["-6.281", "2.422", "1.155"], ["-6.055", "2.227", "1.127"], ["-5.918", "2.198", "1.115"]], "2": [["-5.234", "2.739", "1.219"], ["-5.158", "2.751", "1.219"], ["-5.031", "2.771", "1.219"], ["-4.669", "2.858", "1.219"], ["-4.983", "3.048", "1.206"], ["-5.211", "3.124", "1.197"], ["-5.268", "3.426", "1.160"], ["-5.427", "3.532", "1.145"], ["-5.500", "3.541", "1.142"]], "3": [["-4.349", "1.145", "0.920"], ["-4.349", "1.145", "0.920"], ["-4.349", "1.145", "0.920"], ["-4.325", "1.616", "1.147"], ["-4.341", "2.090", "1.270"], ["-4.685", "2.255", "1.264"], ["-5.086", "2.177", "1.266"], ["-5.234", "2.508", "1.265"], ["-5.224", "2.686", "1.265"]], "4": [["-5.804", "-0.922", "0.000"], ["-5.804", "-0.922", "0.000"], ["-5.804", "-0.922", "0.000"], ["-5.735", "-0.656", "0.000"], ["-5.274", "-0.407", "0.000"], ["-4.808", "-0.787", "0.000"], ["-4.226", "-0.347", "0.062"], ["-4.337", "0.500", "0.638"], ["-4.354", "1.024", "0.829"]], "5": [["-6.564", "-3.316", "0.000"], ["-6.564", "-3.316", "0.000"], ["-6.564", "-3.316", "0.000"], ["-6.564", "-3.316", "0.000"], ["-5.863", "-3.178", "0.000"], ["-6.291", "-2.691", "0.000"], ["-5.957", "-2.322", "0.000"], ["-5.889", "-1.403", "0.000"], ["-5.842", "-0.967", "0.000"]], "6": [["-7.722", "-3.011", "0.000"], ["-7.722", "-3.011", "0.000"], ["-7.722", "-3.011", "0.000"], ["-7.618", "-2.736", "0.000"], ["-7.066", "-2.350", "0.000"], ["-6.687", "-2.888", "0.000"], ["-7.447", "-3.292", "0.000"], ["-7.081", "-3.483", "0.000"], ["-6.637", "-3.376", "0.000"]], "7": [["-7.603", "-2.045", "0.000"], ["-7.603", "-2.045", "0.000"], ["-7.603", "-2.045", "0.000"], ["-7.603", "-2.045", "0.000"], ["-7.771", "-2.429", "0.000"], ["-8.328", "-2.428", "0.000"], ["-8.968", "-2.769", "0.000"], ["-8.512", "-3.029", "0.000"], ["-7.874", "-3.031", "0.000"]], "8": [["-6.715", "0.095", "0.281"], ["-6.715", "0.095", "0.281"], ["-6.715", "0.095", "0.281"], ["-6.715", "0.095", "0.281"], ["-6.961", "-0.356", "0.148"], ["-7.124", "-0.861", "0.005"], ["-7.231", "-1.418", "0.000"], ["-7.400", "-1.776", "0.000"], ["-7.532", "-1.929", "0.000"]]};
            // // let neon2_data = {"0": [["-4.931", "3.622", "-1.017"], ["-4.931", "3.622", "-1.017"], ["-4.543", "4.061", "-1.017"], ["-3.813", "3.591", "-1.017"], ["-4.017", "2.945", "-1.017"], ["-4.125", "2.384", "-1.019"], ["-4.214", "1.716", "-0.996"], ["-4.195", "1.323", "-0.917"]], "1": [["-4.998", "2.721", "-0.976"], ["-4.998", "2.721", "-0.976"], ["-4.998", "2.721", "-0.976"], ["-5.207", "2.683", "-0.957"], ["-5.838", "2.717", "-0.926"], ["-5.427", "3.025", "-0.947"], ["-5.177", "3.183", "-0.973"], ["-4.985", "3.510", "-1.006"]], "2": [["-5.789", "0.754", "-0.762"], ["-5.789", "0.754", "-0.762"], ["-5.930", "1.352", "-0.987"], ["-5.673", "1.834", "-1.017"], ["-5.646", "2.245", "-0.998"], ["-5.224", "2.343", "-0.998"], ["-4.893", "2.328", "-0.998"], ["-4.948", "2.747", "-0.998"]], "3": [["-8.378", "-2.440", "0.000"], ["-8.046", "-2.367", "0.000"], ["-7.333", "-2.381", "0.000"], ["-6.729", "-1.728", "0.000"], ["-6.659", "-0.341", "-0.359"], ["-6.634", "0.253", "-0.620"], ["-6.084", "0.651", "-0.775"], ["-5.871", "0.724", "-0.783"]], "4": [["-6.669", "-2.901", "0.000"], ["-6.669", "-2.901", "0.000"], ["-6.669", "-2.901", "0.000"], ["-6.669", "-2.901", "0.000"], ["-6.557", "-2.370", "0.000"], ["-7.252", "-2.907", "0.000"], ["-7.885", "-3.089", "0.000"], ["-8.367", "-2.908", "0.000"]], "5": [["-6.081", "-2.913", "0.000"], ["-6.060", "-3.225", "0.000"], ["-6.253", "-3.495", "0.000"], ["-6.547", "-3.385", "0.000"], ["-6.790", "-3.421", "0.000"], ["-7.099", "-3.261", "0.000"], ["-6.849", "-3.013", "0.000"], ["-6.726", "-2.969", "0.000"]], "6": [["-5.036", "-0.584", "-0.262"], ["-5.036", "-0.584", "-0.262"], ["-5.153", "-0.478", "-0.271"], ["-5.452", "-0.433", "-0.271"], ["-5.777", "-0.684", "-0.214"], ["-5.805", "-1.082", "-0.126"], ["-5.788", "-1.348", "-0.078"], ["-5.815", "-1.486", "-0.067"]], "7": [["-4.220", "1.139", "-0.896"], ["-4.220", "1.139", "-0.896"], ["-4.313", "0.830", "-0.860"], ["-4.319", "0.483", "-0.773"], ["-4.175", "0.158", "-0.628"], ["-4.136", "-0.259", "-0.407"], ["-4.518", "-0.533", "-0.286"], ["-4.713", "-0.584", "-0.257"]]};
            // let neon1_data = {"0": [["0.470", "2.138", "1.156"], ["0.470", "2.138", "1.156"], ["0.470", "2.138", "1.156"], ["0.531", "1.867", "1.129"], ["0.175", "1.774", "1.087"], ["0.359", "1.398", "1.015"], ["0.476", "0.612", "0.631"], ["-0.042", "0.684", "0.544"], ["-0.223", "0.179", "0.312"]], "1": [["0.735", "3.541", "1.083"], ["0.735", "3.541", "1.083"], ["0.735", "3.541", "1.083"], ["0.474", "3.532", "1.095"], ["0.059", "3.236", "1.140"], ["0.117", "2.765", "1.174"], ["0.107", "2.422", "1.155"], ["0.333", "2.227", "1.127"], ["0.470", "2.198", "1.115"]], "2": [["1.153", "2.739", "1.219"], ["1.229", "2.751", "1.219"], ["1.357", "2.771", "1.219"], ["1.718", "2.858", "1.219"], ["1.405", "3.048", "1.206"], ["1.176", "3.124", "1.197"], ["1.120", "3.426", "1.160"], ["0.961", "3.532", "1.145"], ["0.887", "3.541", "1.142"]], "3": [["2.038", "1.145", "0.920"], ["2.038", "1.145", "0.920"], ["2.038", "1.145", "0.920"], ["2.062", "1.616", "1.147"], ["2.046", "2.090", "1.270"], ["1.703", "2.255", "1.264"], ["1.301", "2.177", "1.266"], ["1.153", "2.508", "1.265"], ["1.164", "2.686", "1.265"]], "4": [["0.584", "-0.922", "0.000"], ["0.584", "-0.922", "0.000"], ["0.584", "-0.922", "0.000"], ["0.653", "-0.656", "0.000"], ["1.113", "-0.407", "0.000"], ["1.579", "-0.787", "0.000"], ["2.162", "-0.347", "0.062"], ["2.050", "0.500", "0.638"], ["2.033", "1.024", "0.829"]], "5": [["-0.176", "-3.316", "0.000"], ["-0.176", "-3.316", "0.000"], ["-0.176", "-3.316", "0.000"], ["-0.176", "-3.316", "0.000"], ["0.525", "-3.178", "0.000"], ["0.096", "-2.691", "0.000"], ["0.431", "-2.322", "0.000"], ["0.499", "-1.403", "0.000"], ["0.546", "-0.967", "0.000"]], "6": [["-1.334", "-3.011", "0.000"], ["-1.334", "-3.011", "0.000"], ["-1.334", "-3.011", "0.000"], ["-1.230", "-2.736", "0.000"], ["-0.678", "-2.350", "0.000"], ["-0.300", "-2.888", "0.000"], ["-1.059", "-3.292", "0.000"], ["-0.693", "-3.483", "0.000"], ["-0.249", "-3.376", "0.000"]], "7": [["-1.215", "-2.045", "0.000"], ["-1.215", "-2.045", "0.000"], ["-1.215", "-2.045", "0.000"], ["-1.215", "-2.045", "0.000"], ["-1.384", "-2.429", "0.000"], ["-1.940", "-2.428", "0.000"], ["-2.580", "-2.769", "0.000"], ["-2.125", "-3.029", "0.000"], ["-1.486", "-3.031", "0.000"]], "8": [["-0.328", "0.095", "0.281"], ["-0.328", "0.095", "0.281"], ["-0.328", "0.095", "0.281"], ["-0.328", "0.095", "0.281"], ["-0.574", "-0.356", "0.148"], ["-0.736", "-0.861", "0.005"], ["-0.844", "-1.418", "0.000"], ["-1.013", "-1.776", "0.000"], ["-1.144", "-1.929", "0.000"]]};
            // let neon2_data = {"0": [["1.456", "3.622", "-1.017"], ["1.456", "3.622", "-1.017"], ["1.845", "4.061", "-1.017"], ["2.575", "3.591", "-1.017"], ["2.370", "2.945", "-1.017"], ["2.262", "2.384", "-1.019"], ["2.173", "1.716", "-0.996"], ["2.193", "1.323", "-0.917"]], "1": [["1.389", "2.721", "-0.976"], ["1.389", "2.721", "-0.976"], ["1.389", "2.721", "-0.976"], ["1.180", "2.683", "-0.957"], ["0.550", "2.717", "-0.926"], ["0.961", "3.025", "-0.947"], ["1.211", "3.183", "-0.973"], ["1.403", "3.510", "-1.006"]], "2": [["0.598", "0.754", "-0.762"], ["0.598", "0.754", "-0.762"], ["0.457", "1.352", "-0.987"], ["0.715", "1.834", "-1.017"], ["0.742", "2.245", "-0.998"], ["1.163", "2.343", "-0.998"], ["1.495", "2.328", "-0.998"], ["1.439", "2.747", "-0.998"]], "3": [["-1.990", "-2.440", "0.000"], ["-1.658", "-2.367", "0.000"], ["-0.945", "-2.381", "0.000"], ["-0.342", "-1.728", "0.000"], ["-0.271", "-0.341", "-0.359"], ["-0.246", "0.253", "-0.620"], ["0.303", "0.651", "-0.775"], ["0.516", "0.724", "-0.783"]], "4": [["-0.281", "-2.901", "0.000"], ["-0.281", "-2.901", "0.000"], ["-0.281", "-2.901", "0.000"], ["-0.281", "-2.901", "0.000"], ["-0.170", "-2.370", "0.000"], ["-0.865", "-2.907", "0.000"], ["-1.497", "-3.089", "0.000"], ["-1.979", "-2.908", "0.000"]], "5": [["0.307", "-2.913", "0.000"], ["0.327", "-3.225", "0.000"], ["0.135", "-3.495", "0.000"], ["-0.160", "-3.385", "0.000"], ["-0.402", "-3.421", "0.000"], ["-0.711", "-3.261", "0.000"], ["-0.462", "-3.013", "0.000"], ["-0.338", "-2.969", "0.000"]], "6": [["1.352", "-0.584", "-0.262"], ["1.352", "-0.584", "-0.262"], ["1.235", "-0.478", "-0.271"], ["0.935", "-0.433", "-0.271"], ["0.611", "-0.684", "-0.214"], ["0.583", "-1.082", "-0.126"], ["0.599", "-1.348", "-0.078"], ["0.573", "-1.486", "-0.067"]], "7": [["2.168", "1.139", "-0.896"], ["2.168", "1.139", "-0.896"], ["2.075", "0.830", "-0.860"], ["2.068", "0.483", "-0.773"], ["2.213", "0.158", "-0.628"], ["2.251", "-0.259", "-0.407"], ["1.870", "-0.533", "-0.286"], ["1.674", "-0.584", "-0.257"]]};
            // // ORGANIZEING THE DATA
            // let neon1_vec = {}, neon1_points=[];
            // let neon1_size = Object.keys(neon1_data).length;

            // for(let i=0; i<neon1_size; i++) {
            //     neon1_vec[i] = [];

            //     for(let j=0; j<neon1_data[i].length; j++){
            //         let newVector = new THREE.Vector3( Number(neon1_data[i][j][0]),
            //                                            Number(neon1_data[i][j][1]),
            //                                            Number(neon1_data[i][j][2]) );
            //         // scale down
            //             newVector.multiplyScalar(3);

            //         // console.log(newVector);
            //         neon1_vec[i].push( newVector );
            //     }
            // }

            // // CREATE CURVE
            // let neon1Material = new THREE.MeshBasicMaterial({color: 0xff0000});
            // let neon1_size2 = Object.keys(neon1_vec).length;

            // for(let i=0; i<neon1_size2; i++) {
            //     let neonSpline = new THREE.CatmullRomCurve3( neon1_vec[i] );
            //     neonSpline.type = 'catmullrom';
            //     // neonSpline.closed = true;
            //     // let manCurve = neonSpline.getPoints( 50 );
            //     neon1_points.push(neonSpline);
            // }
            
            // // console.log(neon1_points.length);

            // this.neon1 = new THREE.Object3D();

            // for(let i=0; i<neon1_points.length; i++){
            //     console.log(neon1_points[i]);

            //     let neonGeometry = new THREE.TubeGeometry( neon1_points[i], 10, 0.05, 8, false);
            //     let neon1 = new THREE.Mesh(neonGeometry, neon1Material);
            //     neon1.position.x = i;
            //     this.neon1.add(neon1);
            // }
            // this.add(this.neon1);
        
        let neonFiles = [];
        for(let i=1; i<=9; i++){
            let fileName = this.BASE_PATH + "/models/neon/" + i + ".json";
            neonFiles.push(fileName);
        }

        let neonFiles2 = [];
        for(let i=1; i<=8; i++){
            let fileName = this.BASE_PATH + "/models/neon2/" + i + ".json";
            neonFiles2.push(fileName);
        }
        this.neon1 = new THREE.Object3D();
        this.neon2 = new THREE.Object3D();

        for(let i=0; i<neonFiles.length; i++){
            loader.load( neonFiles[i], (geometry, material) => {
                let neonMat = new THREE.MeshPhongMaterial({color: 0xc43b69, emissive: 0xff0055, emissiveIntensity: .1});
                let neon = new THREE.Mesh( geometry, neonMat );
                this.neon1.add(neon);
                TweenMax.to( neon.material, 2, { emissiveIntensity: 1, delay: i*1.5%3, repeat: -1, repeatDelay: 5, ease: RoughEase.ease.config({ template: Power0.easeNone, strength: 2, points: 20, taper: "none", randomize: true, clamp: false})} );
            });
            this.add(this.neon1);
        }

        for(let i=0; i<neonFiles2.length; i++){
            loader.load( neonFiles2[i], (geometry, material) => {
                let neonMat = new THREE.MeshPhongMaterial({color: 0x45baba, emissive: 0x00ffff, emissiveIntensity: .1});
                let neon = new THREE.Mesh( geometry, neonMat );
                this.neon2.add(neon);
                //
                // TweenMax.to( neon.material, 2, { emissiveIntensity: 1, ease: Bounce.easeInOut, delay: i, repeat: -1, repeatDelay: 5 } );
                TweenMax.to( neon.material, 2, { emissiveIntensity: 1, delay: i*1.5%3, repeat: -1, repeatDelay: 5, ease: RoughEase.ease.config({ template: Power0.easeNone, strength: 2, points: 20, taper: "none", randomize: true, clamp: false})} );
            });
            this.add(this.neon2);
        }

        // DebugUtil.positionObject(this, "mark");
        //
        this.loadingManager.itemEnd("MarkAnim");
    }

    clamp(num, min, max) {
        return Math.min(Math.max(num, min), max);
    }

    completeSequenceSetup() {
        for(let i=0; i<this.sequenceConfig.length; i++){
            this.sequenceConfig[i].performed = false;
        }
    }

    doFirstAni(){
        console.log("do first animation.");
    }

    transX(geo, n){
        for(let i=0; i<geo.vertices.length; i++){
            geo.vertices[i].x += n;
        }
    }

    transZ(geo, n){
        for(let i=0; i<geo.vertices.length; i++){
            geo.vertices[i].z += n;
        }
    }

    transY(geo, n){
        for(let i=0; i<geo.vertices.length; i++){
            geo.vertices[i].y += n;
        }
    }

    start() {
        this.currentSequence = this.sequenceConfig.slice(0);
        this.nextAnim = this.currentSequence.shift();
    }

    updateVideoTime(time) {
        if (this.nextAnim && time >= this.nextAnim.time) {
            console.log("do anim sequence ", this.nextAnim);
            this.nextAnim.anim();
            if (this.currentSequence.length > 0) {
                this.nextAnim = this.currentSequence.shift();
            } else {
                this.nextAnim = null;
            }
        }
    }

    update(dt,et) {
        // 
    }
}
